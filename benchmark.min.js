(function(){"use strict";const styles=`body{background:var(--body-bg);color:var(--color);--code-bg: #ddd;--input-bg: #ddd;--input-color: black;--icon-color: #777;--button-bg: #ddd;--button-bg-hover: #eee;--button-color: black;--color-green: green;--color-orange: blue}@media (prefers-color-scheme: dark){body{--body-bg: #222;--color: #aaa;--input-bg: black;--icon-color: white;--code-bg: #111;--input-color: #aaa;--button-bg: #444;--button-bg-hover: #555;--button-color: #eee;--color-green: lime;--color-orange: orange}}.color-orange{color:var(--color-orange)!important}.btn-copy{cursor:pointer;transition:transform .2s,opacity .2s;opacity:.7;display:inline-block;vertical-align:middle;position:relative;top:-4px;left:0;fill:var(--icon-color)}.btn-copy:hover{transform:scale(1.2);opacity:1}.btn-copy:active{top:-3px;left:1px}.benchmarks{padding:0;margin:0}.benchmarking .benchmarks .eval,.benchmarking .benchmarks h2{display:none}.benchmarks *{font-family:monospace}.benchmarks *{scrollbar-width:auto;scrollbar-color:#737373 #000000}.benchmarks *::-webkit-scrollbar{width:10px;height:10px}.benchmarks *::-webkit-scrollbar-track{background:#000000}.benchmarks *::-webkit-scrollbar-track:hover{background-color:#111}.benchmarks *::-webkit-scrollbar-thumb{background-color:#555;border-radius:10px;border:1px none #292929}.benchmarks *::-webkit-scrollbar-thumb:hover{background-color:#737373}.benchmarks .test-list>*{position:relative}.benchmarks .test-list>*>h2{font-size:14px;position:absolute;color:#fff;top:-21px;left:10px;background-color:var(--code-bg);border-radius:10px;padding:0 10px}.benchmarks .benchmark-group>pre{display:block!important}.benchmarks .benchmark-group>pre[name=_default]{display:none!important}.benchmarks .code{margin-top:30px;display:block;padding:20px 10px 10px;overflow-x:auto;background-color:var(--code-bg)}.hide-code .benchmarks .code{display:none}.benchmarks .license{padding:10px;font-size:11px;color:#777;font-family:tahoma,Arial,Helvetica,sans-serif}.benchmarks .license a:hover{color:#aaa}.benchmarks .license *{font-family:inherit;color:inherit}.benchmarks .row{margin:15px 0}.benchmarks label{margin:0 10px}.benchmarks input{background:var(--input-bg);border:none;outline:none;padding:5px;color:var(--input-color);margin-left:5px;max-width:100px}.benchmarks input,.benchmarks button{border-radius:3px}.benchmarks button{background:var(--button-bg);color:var(--button-color);border:none;outline:none;padding:5px 10px;cursor:pointer}.benchmarks button:hover{background:var(--button-bg-hover)}.benchmarks button[disabled]{opacity:.5;pointer-events:none}.benchmarks button svg{fill:var(--icon-color)}.benchmarks .run-benchmark{min-width:100px;letter-spacing:2px}.benchmarks .run-benchmark svg{position:relative;top:1px}.benchmarking .benchmarks .toggle-code{display:none}.benchmarks .toggle-code:after{content:"Hide code"}.hide-code .benchmarks .toggle-code:after{content:"Show code"}.benchmarks .back-to-code{display:none}.benchmarking .benchmarks .back-to-code{display:inline-block}.benchmarks .eval{max-height:min(100%,300px);padding:10px;margin-bottom:10px;white-space:nowrap}.hide-code .benchmarks .eval{margin:0;padding:0 10px}.benchmarks .eval.pre{white-space:pre}.benchmarks .eval.error{background-color:#200;color:#f87}.benchmarks .eval:empty{display:none}.benchmarks .ms:after{content:"ms";margin-left:3px}.benchmarks .log{padding-left:10px}.benchmarks .log .title{visibility:hidden}.benchmarking .benchmarks .log .title{visibility:visible}.benchmarks .log b{color:var(--color-green);font-weight:400}
`;HTMLElement.prototype.insert=function(c,r,...n){if(typeof n[0]=="object"){const o=n.shift();r=new Function(Object.keys(o).join(","),"return `"+r+"`")(...Object.values(o))}const e=document.createElement("div");e.innerHTML=r;const t=e.children[0];return this.insertAdjacentElement(c,e.children[0]),[t,...n.map(o=>t.querySelector(o))]},HTMLElement.prototype.append=function(){return this.insert("beforeend",...arguments)},HTMLElement.prototype.prepend=function(){return this.insert("afterbegin",...arguments)},Promise.timeout=function(c){return new Promise(r=>setTimeout(r,c))},Array.prototype.trim=function(c=r=>!r){const r=(t,o)=>!c(t,o,this),n=this.findIndex(r);if(n===this.length-1)return[];const e=this.findLastIndex(r);return this.splice(e+1),this.splice(0,n),this};const containerTpl=`<div class="benchmarks">
    <dialog><textarea></textarea></dialog>
    <div class="row toolbar">
        <button class="run-benchmark" title="Run 5 times for optimal result">
            <svg fill="#FFFFFF" height="12" width="12" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg"
                xmlns:xlink="http://www.w3.org/1999/xlink"
                viewBox="0 0 512 512" xml:space="preserve">
                <g>
                    <g>
                        <path d="M500.203,236.907L30.869,2.24c-6.613-3.285-14.443-2.944-20.736,0.939C3.84,7.083,0,13.931,0,21.333v469.333
			c0,7.403,3.84,14.251,10.133,18.155c3.413,2.112,7.296,3.179,11.2,3.179c3.264,0,6.528-0.747,9.536-2.24l469.333-234.667
			C507.435,271.467,512,264.085,512,256S507.435,240.533,500.203,236.907z" />
                    </g>
                </g>
            </svg>
            RUN</button>
        <label><input class="run-count" type="number" min="1" max="99" style="width:50px"> times</label>
        <label>Cycles:<input placeholder="auto" class="cycles" type="number"></label>
        <span class="btn-copy" title="Copy results in markdown">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <path
                    d="M14,8H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2V10C16,8.897,15.103,8,14,8z" />
                <path
                    d="M20,2H10C8.896,2,8,2.896,8,4v2h1h7c1.104,0,2,0.896,2,2v7v1h2c1.104,0,2-0.896,2-2V4C22,2.896,21.104,2,20,2z" />
            </svg>
        </span>
        <!--<button class="back-to-code">Back to code</button>
        <button class="toggle-code"></button>-->
    </div>
    <div class="test-list"></div>
    <div class="license">
        <a target="_blank" href="https://github.com/silentmantra/benchmark">
            https://github.com/silentmantra/benchmark
        </a>
    </div>
</div>`,benchmarkTpl=`<div>
    <div class="eval"></div>
    <div class="log"></div>
</div>`,groupTpl=`<div class="benchmark-group">
    <pre class="title" name="\${title}">\${title}</pre>
    <div class="benchmarks"></div>
</div>`;document.head.append(`<style>${styles}</style>`),document.body.classList.add("hide-code"),init();async function init(){const scriptContainer=document.querySelector("script[name=benchmark],script[benchmark],body>script");let beforeScript="";const scripts=[];let group="_default";const _groups={};let script;for(const c of scriptContainer.textContent.split(`
`)){if(/^\s*\/\/\s*@(end|footer)|^\s*\/\*\s*@end\s*\*\//.test(c))break;const r=c.match(new RegExp("(?<=@group\\s+).+(?=\\s*)$"));if(r){group=r[0];continue}const n=c.match(new RegExp("(?<=@benchmark\\s+).+(?=\\s*)$"));if(n){script&&scripts.push(script),_groups[group]=!0,script={title:n[0],group,source:""};continue}if(script){script.source+=c+`
`;continue}beforeScript+=c+`
`}script&&scripts.push(script);{const c=Math.max(...scripts.map(r=>r.title.length));scripts.forEach(r=>r.title=r.title.padEnd(c," "))}const[$container,$groups]=document.body.append(eval("`"+containerTpl+"`"),".test-list"),groups=[];for(const c of Object.keys(_groups)){const[r,n]=$groups.append(groupTpl,{title:c},".benchmarks"),e={title:c,$group:r,$benchmarks:n,tests:[]};for(const t of scripts.filter(({group:o})=>o===c)){const[o,l]=n.append(benchmarkTpl,{...t},".eval");(async()=>{let i;try{const[s]=await evalScript(t.source,beforeScript+";");i=JSON.stringify(s,null,4)}catch(s){i=s.message,l.classList.add("error")}let[a,p]=t.source.split(/\/\/\s*@run/);p||([p,a]=[a,p]),a??(a=""),l.innerHTML=[t.title.replace(/\s/g,"&nbsp;")+"&nbsp:",i.toString().slice(0,500)].join("&nbsp;&nbsp;"),e.tests.push({...t,code:p,pre:a,$benchmark:o,diminisher:1,benchmark(s=1){return benchmarkScript(s===1?p:`for (let $__i = 0; $__i < ${s}; $__i++) {${p}}`,beforeScript+";"+a)}})})()}groups.push(e)}$container.querySelector(".cycles").value=config("CYCLES",scriptContainer.getAttribute("benchmark"),scriptContainer.dataset.count),$container.querySelector(".run-count").value=config("TIMES",5),$container.querySelector(".btn-copy").addEventListener("click",c=>{var l;let n=`
        \`\`\`
        \` ${(l=navigator.userAgent.match(/(Chrome|Firefox)\/\d+/))==null?void 0:l[0]}
        ---
        ${groups.map(i=>{const a=i.title==="_default",p=[];return a||p.push(i.title),i.$benchmarks.querySelectorAll(".log").forEach(s=>{p.push((a?"":"&nbsp;&nbsp;&nbsp;&nbsp;")+s.textContent)}),p.join(`
`)}).join(`
`)}
        ---
        https://github.com/silentmantra/benchmark \`
        \`\`\``.replace(/^\s+/mg,"").replaceAll("&nbsp;"," ");const e=Math.max(...n.split(`
`).map(i=>i.length));n=n.replaceAll("---","-".repeat(e));const t=document.querySelector("dialog"),o=t.querySelector("textarea");t.style.opacity=0,o.textContent=n,t.showModal(),o.focus(),o.select(),document.execCommand("copy"),t.close()}),$container.querySelector(".run-benchmark").addEventListener("click",async c=>{document.body.classList.add("benchmarking"),c.target.disabled=!0,groups.forEach(e=>{e.tests.forEach(t=>{delete t.executions,delete t.duration,t.diminisher=1})});let r=$container.querySelector("input.cycles").valueAsNumber;const n=+$container.querySelector("input.run-count").valueAsNumber||5;if(r)groups.forEach(e=>e.count=r);else for(const e of groups){let t=1,o=e.tests;const l=[];for(;;){for(const a of o)a.duration=await a.benchmark(t);const i=o.filter(a=>a.duration<20);if(l.push(...o.filter(a=>a.duration>=100)),l.forEach(a=>a.diminisher*=10),!i.length){e.count=t*10;break}o=o.filter(a=>a.duration<100),t*=10}}for(let e=0;e<n;e++){for(const{tests:t,$benchmarks:o,count:l}of groups)for(const i of[...t]){const a=await i.benchmark(l/i.diminisher|0);(i.executions??(i.executions=[])).push(a),i.executions.sort((s,d)=>s-d),i.min=i.executions[0],t.sort((s,d)=>s.min*s.diminisher-d.min*d.diminisher).forEach(s=>o.appendChild(s.$benchmark));const p=(t[0].min||0)*t[0].diminisher;t.forEach((s,d)=>{s.diff=d?(s.min*s.diminisher/p).toFixed(1)+"x":"1.0x"});for(const s of t.filter(d=>d.executions)){const d=(b,m)=>b.toString().padStart(Math.max(...t.map(m).map(u=>(u==null?void 0:u.toString().length)||0))," ").replace(" ","&nbsp;");s.$benchmark.querySelector(".log").innerHTML=['<span class="title">'+s.title.replace(/\s/g,"&nbsp;")+"&nbsp;</span>",'<b class="color-orange" title="Difference from fastest solution (with fastest results)">'+d(s.diff,b=>b.diff)+"</b>","|",'<span title="Number of cycles">'+d("x"+l/s.diminisher,b=>"x"+l/b.diminisher)+"</span>",...s.executions.map((b,m)=>"<b>"+d(b,u=>{var h;return(h=u.executions)==null?void 0:h[m]})+"</b>")].join("&nbsp;&nbsp;")}i!==t.at(-1)&&await Promise.timeout(1e3)}e<n.length-1&&await Promise.timeout(1e3)}c.target.disabled=!1})}async function benchmarkScript(c,r=""){const n=document.createElement("script"),e=Math.random().toString().slice(2).split("").reverse().join("");return n.src="data:text/javascript;base64,"+btoa(`
        try {
            ${r}
            const __$start$ = performance.now();
            ${c};
            window.__duration${e} = Math.round(performance.now() - __$start$);
        } catch (e) {
            window.__error${e} = e;
        }
    `),document.body.appendChild(n),new Promise((t,o)=>{n.onload=()=>{if(window["__error"+e]){const i=window["__error"+e];delete window["__error"+e],o(i)}const l=window["__duration"+e];delete window["__duration"+e],n.remove(),t(l)},n.onerror=o})}async function evalScript(c,r=""){const n=document.createElement("script"),e=Math.random().toString().slice(2).split("").reverse().join(""),t="`"+c.replaceAll("\\","\\\\").replaceAll("`","\\`")+"`";return n.src="data:text/javascript;base64,"+btoa(`
        try {
            ${r}
            window.__result${e} = eval(${t});
        } catch (e) {
            window.__error${e} = e;
        }
    `),document.body.appendChild(n),new Promise((o,l)=>{n.onload=()=>{if(window["__error"+e]){const a=window["__error"+e];delete window["__error"+e],l(a)}const i=window["__result"+e];delete window["__result"+e],n.remove(),o([i])},n.onerror=l})}function config(name,...vals){try{return eval(name)}catch(c){return vals.find(Boolean)}}})();
