(function(){"use strict";const styles=`body{background:#222;color:#aaa}.btn-copy{cursor:pointer;transition:transform .2s,opacity .2s;opacity:.7;display:inline-block;vertical-align:middle;position:relative;top:-4px;left:0;fill:#fff}.btn-copy:hover{transform:scale(1.2);opacity:1}.btn-copy:active{top:-3px;left:1px}.benchmarks{padding:0;margin:0}.benchmarks .before-script{margin-top:0!important;padding-top:10px!important}.benchmarks .before-script:empty{display:none}.benchmarking .benchmarks .before-script,.benchmarking .benchmarks pre,.benchmarking .benchmarks .eval,.benchmarking .benchmarks h2{display:none}.benchmarks *{font-family:monospace}.benchmarks *{scrollbar-width:auto;scrollbar-color:#737373 #000000}.benchmarks *::-webkit-scrollbar{width:10px;height:10px}.benchmarks *::-webkit-scrollbar-track{background:#000000}.benchmarks *::-webkit-scrollbar-track:hover{background-color:#111}.benchmarks *::-webkit-scrollbar-thumb{background-color:#555;border-radius:10px;border:1px none #292929}.benchmarks *::-webkit-scrollbar-thumb:hover{background-color:#737373}.benchmarks .test-list>*{position:relative}.benchmarks .test-list>*>h2{font-size:14px;position:absolute;color:#fff;top:-21px;left:10px;background-color:#111;border-radius:10px;padding:0 10px}.benchmarks .code{margin-top:30px;display:block;padding:20px 10px 10px;overflow-x:auto;background-color:#111}.hide-code .benchmarks .code{display:none}.benchmarks .license{padding:10px;font-size:11px;color:#777;font-family:tahoma,Arial,Helvetica,sans-serif}.benchmarks .license a:hover{color:#aaa}.benchmarks .license *{font-family:inherit;color:inherit}.benchmarks .row{margin:15px 0}.benchmarks label{margin:0 10px}.benchmarks input{background:black;border:none;outline:none;padding:5px;color:#aaa;margin-left:5px;max-width:100px}.benchmarks button{background:#444;color:#eee;border:1px solid #555;outline:none;padding:5px 10px;cursor:pointer}.benchmarks button:hover{background:#555}.benchmarks button[disabled]{opacity:.5;pointer-events:none}.benchmarking .benchmarks .toggle-code{display:none}.benchmarks .toggle-code:after{content:"Hide code"}.hide-code .benchmarks .toggle-code:after{content:"Show code"}.benchmarks .back-to-code{display:none}.benchmarking .benchmarks .back-to-code{display:inline-block}.benchmarks .eval{max-height:min(100%,300px);padding:10px;margin-bottom:10px;white-space:nowrap}.hide-code .benchmarks .eval{margin:0;padding:0 10px}.benchmarks .eval.pre{white-space:pre}.benchmarks .eval.error{background-color:#200;color:#f87}.benchmarks .eval:empty{display:none}.benchmarks .ms:after{content:"ms";margin-left:3px}.benchmarks .log{padding-left:10px}.benchmarks .log .title{visibility:hidden}.benchmarking .benchmarks .log .title{visibility:visible}.benchmarks .log b{color:#0f0;font-weight:400}
`;HTMLElement.prototype.insert=function(o,s,...t){if(typeof t[0]=="object"){const e=t.shift();s=new Function(Object.keys(e).join(","),"return `"+s+"`")(...Object.values(e))}const n=document.createElement("div");n.innerHTML=s;const c=n.children[0];return this.insertAdjacentElement(o,n.children[0]),[c,...t.map(e=>c.querySelector(e))]},HTMLElement.prototype.append=function(){return this.insert("beforeend",...arguments)},HTMLElement.prototype.prepend=function(){return this.insert("afterbegin",...arguments)},Promise.timeout=function(o){return new Promise(s=>setTimeout(s,o))},Array.prototype.trim=function(o=s=>!s){const s=(c,e)=>!o(c,e,this),t=this.findIndex(s);if(t===this.length-1)return[];const n=this.findLastIndex(s);return this.splice(n+1),this.splice(0,t),this};const containerTpl=`<div class="benchmarks">
    <dialog><textarea></textarea></dialog>
    <div class="row toolbar">
        <button class="run-benchmark">Benchmark</button>
        <label>Cycles:<input class="cycles" type="number"></label>
        <span class="btn-copy" title="Copy results in markdown">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <path
                    d="M14,8H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2V10C16,8.897,15.103,8,14,8z" />
                <path
                    d="M20,2H10C8.896,2,8,2.896,8,4v2h1h7c1.104,0,2,0.896,2,2v7v1h2c1.104,0,2-0.896,2-2V4C22,2.896,21.104,2,20,2z" />
            </svg>
        </span>
        <!--<button class="back-to-code">Back to code</button>
        <button class="toggle-code"></button>-->
    </div>
    <pre class='code before-script'>\${formatCode(beforeScript)}</pre>
    <div class="test-list">

    </div>
    <div class="license">
        <a target="_blank" href="https://github.com/silentmantra/benchmark">
            https://github.com/silentmantra/benchmark
        </a>
    </div>
</div>`,benchmarkTpl=`<div>
    <!--<pre class="code">\${formatCode(source)}</pre>-->
    <div class="eval"></div>
    <div class="log"></div>
</div>`;document.head.append(`<style>${styles}</style>`),document.body.classList.add("hide-code"),init();async function init(){const scriptContainer=document.querySelector("script[name=benchmark],script[benchmark]"),script=scriptContainer.textContent;let scripts=script.split("@benchmark");const beforeScript=scripts.shift().split(`
`).slice(0,-1).join(`
`);scripts=scripts.map((o,s,t)=>{const n=o.split(`
`),c=n.shift().trim();return s!==t.length-1&&n.pop(),{title:c,source:n.join(`
`)}});const max=Math.max(...scripts.map(o=>o.title.length));scripts.forEach(o=>o.title=o.title.padEnd(max," "));const[$container,$benchmarks]=document.body.append(eval("`"+containerTpl+"`"),".test-list"),tests=[];for(const o of scripts){const[s,t]=$benchmarks.append(benchmarkTpl,{formatCode,...o},".eval");(async()=>{let n;try{const[r]=await evalScript(o.source,beforeScript+";");n=JSON.stringify(r,null,4)}catch(r){n=r.message,t.classList.add("error")}let[c,e]=o.source.split(/\/\/\s*@run/);e||([e,c]=[c,e]),c??(c=""),t.innerHTML=[o.title.replace(/\s/g,"&nbsp;")+"&nbsp:",n.toString().slice(0,500)].join("&nbsp;&nbsp;"),tests.push({...o,code:e,pre:c,benchmark:s})})()}$container.querySelector(".cycles").value=scriptContainer.getAttribute("benchmark")||scriptContainer.dataset.count||1,$container.querySelector(".btn-copy").addEventListener("click",o=>{var r;const s=(r=navigator.userAgent.match(/(Chrome|Firefox)\/\d+/))==null?void 0:r[0];let t=`
        \`\`\`
        Cycles: ${document.querySelector("input.cycles").valueAsNumber} / ${s}
        ---
        ${[...$container.querySelectorAll(".test-list .log")].map(i=>i.textContent).join(`
`)}
        ---
        https://github.com/silentmantra/benchmark
        \`\`\``.replace(/^\s+/mg,"").replace("&nbsp;"," ");const n=Math.max(...t.split(`
`).map(i=>i.length));t=t.replaceAll("---","-".repeat(n));const c=document.querySelector("dialog"),e=c.querySelector("textarea");c.style.opacity=0,e.textContent=t,c.showModal(),e.focus(),e.select(),document.execCommand("copy"),c.close()}),$container.querySelector(".run-benchmark").addEventListener("click",async o=>{document.body.classList.add("benchmarking"),o.target.disabled=!0;const s=$container.querySelector("input.cycles").valueAsNumber;for(const t of[...tests]){let n;s===1?[,n]=await benchmarkScript(t.code,beforeScript+";"+t.pre):[,n]=await benchmarkScript(`
                for (let $__i = 0; $__i < ${s}; $__i++) {
                    ${t.code}
                }
            `,beforeScript+";"+t.pre),(t.executions??(t.executions=[])).push(n),t.min=t.executions.reduce((e,r)=>e===null?r:Math.min(e,r),null),tests.sort((e,r)=>e.min-r.min).forEach(e=>$benchmarks.appendChild(e.benchmark));const c=tests[0].min||0;tests.forEach((e,r)=>{e.diff=r?(e.min/c).toFixed(1)+"x":"1.0x"});for(const e of tests.filter(r=>r.executions)){const r=(a,p)=>a.toString().padStart(Math.max(...tests.map(p).map(l=>(l==null?void 0:l.toString().length)||0))," ").replace(" ","&nbsp;"),i=[];e.executions.length>1&&i.push('<span class="test-value"><b style="color: orange">'+r(e.min,a=>a.min)+"</b>/min</span>",r(e.diff,a=>a.diff)),e.benchmark.querySelector(".log").innerHTML=['<span class="title">'+e.title.replace(/\s/g,"&nbsp;")+"&nbsp;</span>",...i,...e.executions.map((a,p)=>'<span class="test-value"><b>'+r(a,l=>{var d;return(d=l.executions)==null?void 0:d[p]})+"</b></span>"),...e.executions.length>1?[]:[e.diff]].join("&nbsp;&nbsp;")}t!==tests.at(-1)&&await Promise.timeout(1e3)}o.target.disabled=!1})}async function benchmarkScript(o,s=""){const t=document.createElement("script"),n=Math.random().toString().slice(2).split("").reverse().join("");return t.src="data:text/javascript;base64,"+btoa(`
        try {
            ${s}
            const __$start$ = performance.now();
            ${o};
            window.__duration${n} = Math.round(performance.now() - __$start$);
        } catch (e) {
            window.__error${n} = e;
        }
    `),document.body.appendChild(t),new Promise((c,e)=>{t.onload=()=>{if(window["__error"+n]){const a=window["__error"+n];delete window["__error"+n],e(a)}const r=window["__result"+n],i=window["__duration"+n];delete window["__result"+n],delete window["__duration"+n],t.remove(),c([r,i])},t.onerror=e})}async function evalScript(o,s=""){const t=document.createElement("script"),n=Math.random().toString().slice(2).split("").reverse().join(""),c="`"+o.replaceAll("\\","\\\\").replaceAll("`","\\`")+"`";return t.src="data:text/javascript;base64,"+btoa(`
        try {
            ${s}
            window.__result${n} = eval(${c});
        } catch (e) {
            window.__error${n} = e;
        }
    `),document.body.appendChild(t),new Promise((e,r)=>{t.onload=()=>{if(window["__error"+n]){const a=window["__error"+n];delete window["__error"+n],r(a)}const i=window["__result"+n];delete window["__result"+n],t.remove(),e([i])},t.onerror=r})}function formatCode(o){const s=o.split(`
`),t=s.reduce((c,e)=>{const r=e.trim()?e.search(/\S/):1e5;return c===null||r<c?r:c},null);return s.trim().map(c=>c.slice(t)).join(`
`).replace("<","&lt;").replace(">","&gt;")}})();
