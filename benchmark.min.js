(function(){"use strict";const styles=`body{background:#222;color:#aaa}.benchmarks{padding:0;margin:0}.benchmarks .before-script{margin-top:0!important;padding-top:10px!important}.benchmarks .before-script:empty{display:none}.benchmarking .benchmarks .before-script,.benchmarking .benchmarks pre,.benchmarking .benchmarks .eval,.benchmarking .benchmarks h2{display:none}.benchmarks *{font-family:monospace}.benchmarks *{scrollbar-width:auto;scrollbar-color:#737373 #000000}.benchmarks *::-webkit-scrollbar{width:10px;height:10px}.benchmarks *::-webkit-scrollbar-track{background:#000000}.benchmarks *::-webkit-scrollbar-track:hover{background-color:#111}.benchmarks *::-webkit-scrollbar-thumb{background-color:#555;border-radius:10px;border:1px none #292929}.benchmarks *::-webkit-scrollbar-thumb:hover{background-color:#737373}.benchmarks .test-list>*{position:relative}.benchmarks .test-list>*>h2{font-size:14px;position:absolute;color:#fff;top:-21px;left:10px;background-color:#111;border-radius:10px;padding:0 10px}.benchmarks .code{margin-top:30px;display:block;padding:20px 10px 10px;overflow-x:auto;background-color:#111}.hide-code .benchmarks .code{display:none}.benchmarks .license{padding:10px;font-size:11px;color:#777;font-family:tahoma,Arial,Helvetica,sans-serif}.benchmarks .license a:hover{color:#aaa}.benchmarks .license *{font-family:inherit;color:inherit}.benchmarks .row{margin:15px 0}.benchmarks label{margin:0 10px}.benchmarks input{background:black;border:none;outline:none;padding:5px;color:#aaa;margin-left:5px;max-width:100px}.benchmarks button{background:#444;color:#eee;border:1px solid #555;outline:none;padding:5px 10px;cursor:pointer}.benchmarks button:hover{background:#555}.benchmarks button[disabled]{opacity:.5;pointer-events:none}.benchmarking .benchmarks .toggle-code{display:none}.benchmarks .toggle-code:after{content:"Hide code"}.hide-code .benchmarks .toggle-code:after{content:"Show code"}.benchmarks .back-to-code{display:none}.benchmarking .benchmarks .back-to-code{display:inline-block}.benchmarks .eval{max-height:min(100%,300px);padding:10px;margin-bottom:10px;white-space:nowrap}.hide-code .benchmarks .eval{margin:0;padding:0 10px}.benchmarks .eval.pre{white-space:pre}.benchmarks .eval.error{background-color:#200;color:#f87}.benchmarks .eval:empty{display:none}.benchmarks .ms:after{content:"ms";margin-left:3px}.benchmarks .log{padding-left:10px}.benchmarks .log .title{visibility:hidden}.benchmarking .benchmarks .log .title{visibility:visible}.benchmarks .log b{color:#0f0;font-weight:400}
`;HTMLElement.prototype.insert=function(t,r,...e){if(typeof e[0]=="object"){const c=e.shift();r=new Function(Object.keys(c).join(","),"return `"+r+"`")(...Object.values(c))}const n=document.createElement("div");n.innerHTML=r;const o=n.children[0];return this.insertAdjacentElement(t,n.children[0]),[o,...e.map(c=>o.querySelector(c))]},HTMLElement.prototype.append=function(){return this.insert("beforeend",...arguments)},HTMLElement.prototype.prepend=function(){return this.insert("afterbegin",...arguments)},Promise.timeout=function(t){return new Promise(r=>setTimeout(r,t))},Array.prototype.trim=function(t=r=>!r){const r=(o,c)=>!t(o,c,this),e=this.findIndex(r);if(e===this.length-1)return[];const n=this.findLastIndex(r);return this.splice(n+1),this.splice(0,e),this};const containerTpl=`<div class="benchmarks">
    <div class="row toolbar">
        <button class="run-benchmark">Benchmark</button>
        <label>Cycles:<input class="cycles" type="number"></label>
        <button class="back-to-code">Back to code</button>
        <button class="toggle-code"></button>
    </div>
    <pre class='code before-script'>\${formatCode(beforeScript)}</pre>
    <div class="test-list">

    </div>
    <div class="license">
        <a target="_blank" href="https://github.com/silentmantra/benchmark">
            <!--<img src="https://github.githubassets.com/favicons/favicon-dark.png">-->
            Benchmark</a> by <a
            href="mailto:aleks4hour@gmail.com">Alexander Nenashev</a>
        \${new Date().getFullYear()}&copy;
    </div>
</div>`,benchmarkTpl=`<div>
    <pre class="code">\${formatCode(source)}</pre>
    <div class="eval"></div>
    <div class="log"></div>
</div>`;document.head.append(`<style>${styles}</style>`),document.body.classList.add("hide-code"),init();async function init(){const scriptContainer=document.querySelector("script[name=benchmark],script[benchmark]"),script=scriptContainer.textContent;let scripts=script.split("@benchmark");const beforeScript=scripts.shift().split(`
`).slice(0,-1).join(`
`);scripts=scripts.map((t,r,e)=>{const n=t.split(`
`),o=n.shift().trim();return r!==e.length-1&&n.pop(),{title:o,source:n.join(`
`)}});const max=Math.max(...scripts.map(t=>t.title.length));scripts.forEach(t=>t.title=t.title.padEnd(max," "));const[$container,$benchmarks]=document.body.append(eval("`"+containerTpl+"`"),".test-list"),tests=[];for(const t of scripts){const[r,e]=$benchmarks.append(benchmarkTpl,{formatCode,...t},".eval");(async()=>{let n;try{const[s]=await evalScript(t.source);n=JSON.stringify(s,null,4)}catch(s){n=s.message,e.classList.add("error")}let[o,c]=t.source.split(/\/\/\s*@run/);c||([c,o]=[o,c]),e.innerHTML=[t.title.replace(/\s/g,"&nbsp;")+"&nbsp:",n].join("&nbsp;&nbsp;"),tests.push({...t,code:c,pre:o,benchmark:r})})()}$container.querySelector(".cycles").value=scriptContainer.dataset.count||1e5,$container.querySelector(".back-to-code").addEventListener("click",t=>{document.body.classList.remove("benchmarking")}),$container.querySelector(".toggle-code").addEventListener("click",t=>{document.body.classList.toggle("hide-code")}),$container.querySelector(".run-benchmark").addEventListener("click",async t=>{document.body.classList.add("benchmarking"),t.target.disabled=!0;const r=$container.querySelector("input.cycles").valueAsNumber;for(const e of tests){const[n,o]=await benchmarkScript(`
                for (let i = 0; i < ${r}; i++) {
                    ${e.code}
                }
            `,beforeScript+";"+e.pre);(e.executions??(e.executions=[])).push(o);const c=e.executions.reduce((a,i)=>a+i);e.average=Math.round(c/e.executions.length);const s=[];e.executions.length>1&&s.push('<b style="color: orange">'+e.average+'</b><span class="ms"></span>/avg'),e.benchmark.querySelector(".log").innerHTML=['<span class="title">'+e.title.replace(/\s/g,"&nbsp;")+"&nbsp:</span>",...s,...e.executions.map(a=>"<b>"+a+'</b><span class="ms"></span>')].join("&nbsp;&nbsp;"),e!==tests.at(-1)&&await Promise.timeout(500)}tests.sort((e,n)=>e.average-n.average).forEach(e=>$benchmarks.appendChild(e.benchmark)),t.target.disabled=!1})}async function benchmarkScript(t,r=""){const e=document.createElement("script"),n=Math.random().toString().slice(2).split("").reverse().join("");return e.src=`data:text/javascript,
        try {
            ${r}
            const __$start$ = performance.now();
            ${t};
            window.__duration${n} = performance.now() - __$start$;
        } catch (e) {
            window.__error${n} = e;
        }
    `,document.body.appendChild(e),new Promise((o,c)=>{e.onload=()=>{if(window["__error"+n]){const i=window["__error"+n];delete window["__error"+n],c(i)}const s=window["__result"+n],a=window["__duration"+n];delete window["__result"+n],delete window["__duration"+n],e.remove(),o([s,a])},e.onerror=c})}async function evalScript(t,r=""){const e=document.createElement("script"),n=Math.random().toString().slice(2).split("").reverse().join(""),o="`"+t.replaceAll("\\","\\\\").replaceAll("`","\\`")+"`";return e.src=`data:text/javascript,
        try {
            ${r}
            const __$start$ = performance.now();
            window.__result${n} = eval(${o});
            window.__duration${n} = performance.now() - __$start$;
        } catch (e) {
            window.__error${n} = e;
        }
    `,document.body.appendChild(e),new Promise((c,s)=>{e.onload=()=>{if(window["__error"+n]){const l=window["__error"+n];delete window["__error"+n],s(l)}const a=window["__result"+n],i=window["__duration"+n];delete window["__result"+n],delete window["__duration"+n],e.remove(),c([a,i])},e.onerror=s})}function formatCode(t){const r=t.split(`
`),e=r.reduce((o,c)=>{const s=c.trim()?c.search(/\S/):1e5;return o===null||s<o?s:o},null);return r.trim().map(o=>o.slice(e)).join(`
`)}})();
