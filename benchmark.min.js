(function(){"use strict";const styles=`body{background:var(--body-bg);color:var(--color);--code-bg: #ddd;--input-bg: #ddd;--input-color: black;--icon-color: #777;--button-bg: #ddd;--button-bg-hover: #eee;--button-color: black;--color-green: green;--color-orange: blue;--color-gray: #888}@media (prefers-color-scheme: dark){body{--body-bg: #222;--color: #aaa;--input-bg: black;--icon-color: white;--code-bg: #111;--input-color: #aaa;--button-bg: #444;--button-bg-hover: #555;--button-color: #eee;--color-green: lime;--color-orange: orange}}.color-orange{color:var(--color-orange)!important}.color-gray{color:var(--color-gray)!important}.blink{animation:blinker .5s linear infinite}@keyframes blinker{50%{opacity:0}}.run-status{margin-top:-20px;padding:10px;opacity:.6}.btn-copy{cursor:pointer;transition:transform .2s,opacity .2s;opacity:.7;display:inline-block;vertical-align:middle;position:relative;top:-4px;left:0;fill:var(--icon-color)}.btn-copy:hover{transform:scale(1.2);opacity:1}.btn-copy:active{top:-3px;left:1px}.benchmarks{padding:0;margin:0}.benchmarking .benchmarks .eval,.benchmarking .benchmarks h2{display:none}.benchmarks *{font-family:monospace}.benchmarks *{scrollbar-width:auto;scrollbar-color:#737373 #000000}.benchmarks *::-webkit-scrollbar{width:10px;height:10px}.benchmarks *::-webkit-scrollbar-track{background:#000000}.benchmarks *::-webkit-scrollbar-track:hover{background-color:#111}.benchmarks *::-webkit-scrollbar-thumb{background-color:#555;border-radius:10px;border:1px none #292929}.benchmarks *::-webkit-scrollbar-thumb:hover{background-color:#737373}.benchmarks .test-list>*{position:relative}.benchmarks .test-list>*>h2{font-size:14px;position:absolute;color:#fff;top:-21px;left:10px;background-color:var(--code-bg);border-radius:10px;padding:0 10px}.benchmarks .benchmark-group>pre{display:block!important}.benchmarks .benchmark-group>pre[name=_default]{display:none!important}.benchmarks .code{margin-top:30px;display:block;padding:20px 10px 10px;overflow-x:auto;background-color:var(--code-bg)}.hide-code .benchmarks .code{display:none}.benchmarks .license{padding:10px;font-size:11px;color:#777;font-family:tahoma,Arial,Helvetica,sans-serif}.benchmarks .license a:hover{color:#aaa}.benchmarks .license *{font-family:inherit;color:inherit}.benchmarks .row{margin:15px 0}.benchmarks label{margin:0 10px}.benchmarks input{background:var(--input-bg);border:none;outline:none;padding:5px;color:var(--input-color);margin-left:5px;max-width:100px}.benchmarks input,.benchmarks button{border-radius:3px}.benchmarks button{background:var(--button-bg);color:var(--button-color);border:none;outline:none;padding:5px 10px;cursor:pointer}.benchmarks button:hover{background:var(--button-bg-hover)}.benchmarks button[disabled]{opacity:.5;pointer-events:none}.benchmarks button svg{fill:var(--icon-color)}body.running .benchmarks .run-benchmark{display:none}.benchmarks .stop-benchmark{display:none;position:relative}body.running .benchmarks .stop-benchmark{display:inline-block}.benchmarks .run-benchmark,.benchmarks .stop-benchmark{min-width:100px;letter-spacing:2px}.benchmarks .run-benchmark svg,.benchmarks .stop-benchmark svg{position:relative;top:1px}.benchmarking .benchmarks .toggle-code{display:none}.benchmarks .toggle-code:after{content:"Hide code"}.hide-code .benchmarks .toggle-code:after{content:"Show code"}.benchmarks .back-to-code{display:none}.benchmarking .benchmarks .back-to-code{display:inline-block}.benchmarks .eval{max-height:min(100%,300px);padding:10px;margin-bottom:10px;white-space:nowrap}.hide-code .benchmarks .eval{margin:0;padding:0 10px}.benchmarks .eval.pre{white-space:pre}.benchmarks .eval.error{background-color:#200;color:#f87}.benchmarks .eval:empty{display:none}.benchmarks .ms:after{content:"ms";margin-left:3px}.benchmarks .log{padding-left:10px}.benchmarks .log .title{visibility:hidden}.benchmarking .benchmarks .log .title{visibility:visible}.benchmarks .log b{color:var(--color-green);font-weight:400}
`;HTMLElement.prototype.insert=function(t,i,...r){if(typeof r[0]=="object"){const e=r.shift();i=new Function(Object.keys(e).join(","),"return `"+i+"`")(...Object.values(e))}const s=document.createElement("div");s.innerHTML=i;const l=s.children[0];return this.insertAdjacentElement(t,s.children[0]),[l,...r.map(e=>l.querySelector(e))]},HTMLElement.prototype.append=function(){return this.insert("beforeend",...arguments)},HTMLElement.prototype.prepend=function(){return this.insert("afterbegin",...arguments)},Promise.timeout=function(t){return new Promise(i=>setTimeout(i,t))},Promise.requestAnimationFrame=function(){return new Promise(t=>requestAnimationFrame(t))},Array.prototype.trim=function(t=i=>!i){const i=(l,e)=>!t(l,e,this),r=this.findIndex(i);if(r===this.length-1)return[];const s=this.findLastIndex(i);return this.splice(s+1),this.splice(0,r),this};const containerTpl=`<div class="benchmarks">
    <dialog><textarea></textarea></dialog>
    <div class="row toolbar">
        <button class="run-benchmark" title="Run 5 times for optimal result">
            <svg fill="#FFFFFF" height="12" width="12" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg"
                xmlns:xlink="http://www.w3.org/1999/xlink"
                viewBox="0 0 512 512" xml:space="preserve">
                <g>
                    <g>
                        <path d="M500.203,236.907L30.869,2.24c-6.613-3.285-14.443-2.944-20.736,0.939C3.84,7.083,0,13.931,0,21.333v469.333
			c0,7.403,3.84,14.251,10.133,18.155c3.413,2.112,7.296,3.179,11.2,3.179c3.264,0,6.528-0.747,9.536-2.24l469.333-234.667
			C507.435,271.467,512,264.085,512,256S507.435,240.533,500.203,236.907z" />
                    </g>
                </g>
            </svg>
            RUN</button>
            <button class="stop-benchmark">STOP</button>            
        <label><input class="run-count" type="number" min="1" max="99" style="width:50px"> times</label>
        <label>Cycles:<input placeholder="auto" class="cycles" type="number"></label>
        <span class="btn-copy" title="Copy results in markdown">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <path
                    d="M14,8H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2V10C16,8.897,15.103,8,14,8z" />
                <path
                    d="M20,2H10C8.896,2,8,2.896,8,4v2h1h7c1.104,0,2,0.896,2,2v7v1h2c1.104,0,2-0.896,2-2V4C22,2.896,21.104,2,20,2z" />
            </svg>
        </span>
        <!--<button class="back-to-code">Back to code</button>
        <button class="toggle-code"></button>-->
    </div>
    <div class="test-list">
        <div class="run-status"></div>
    </div>
    <div class="license">
        <a target="_blank" href="https://github.com/silentmantra/benchmark">
            https://github.com/silentmantra/benchmark
        </a>
    </div>
</div>`,benchmarkTpl=`<div>
    <div class="eval"></div>
    <div class="log"></div>
</div>`,groupTpl=`<div class="benchmark-group">
    <pre class="title" name="\${title}">\${title}</pre>
    <div class="benchmarks"></div>
</div>`;document.head.append(`<style>${styles}</style>`),document.body.classList.add("hide-code"),init();async function init(){let scriptContainer=document.querySelector("script[name=benchmark],script[benchmark]");if(scriptContainer||(scriptContainer=[...document.querySelectorAll("script")].find(t=>t.textContent.match(/^\s*\/\/\s*@benchmark/m))),!scriptContainer){document.body.innerText="no benchmark script found";return}let beforeScript="";const scripts=[];let group="_default";const _groups={};let script,commented=!1;for(const t of scriptContainer.textContent.split(`
`)){if(/^\s*\/\*/.test(t)){commented=!0;continue}else if(commented&&/\*\/\s*$/.test(t)){commented=!1;continue}else if(commented)continue;if(/^\s*\/\/\s*@(end|footer)|^\s*\/\*\s*@end\s*\*\//.test(t))break;const i=t.match(new RegExp("(?<=@group\\s+).+(?=\\s*)$"));if(i){group=i[0];continue}const r=t.match(new RegExp("(?<=@benchmark\\s+).+(?=\\s*)$"));if(r){script&&scripts.push(script),_groups[group]=!0,script={title:r[0],group,source:""};continue}if(script){script.source+=t+`
`;continue}beforeScript+=t+`
`}script&&scripts.push(script);{const t=Math.max(...scripts.map(i=>i.title.length));scripts.forEach(i=>i.title=i.title.padEnd(t," "))}const $chunk=config("$chunk"),chunks=$chunk?[1,10,100,1e3]:[1],[$container,$groups]=document.body.append(eval("`"+containerTpl+"`"),".test-list"),inputFillScript=`
    let $chunkCount = 1;
        if (Array.isArray($input)){
            while($chunkCount--) $input.push(...$chunk);
        } else {
            while($chunkCount--) $input += $chunk;
        }
    `,groups=[];for(const t of Object.keys(_groups)){const[i,r]=$groups.append(groupTpl,{title:t},".benchmarks"),s={title:t,$group:i,$benchmarks:r,tests:[]};for(const l of scripts.filter(({group:e})=>e===t)){const[e,n]=r.append(benchmarkTpl,{...l},".eval");(async()=>{let m;try{const b=config("$chunk");let k=beforeScript;b&&(k+=inputFillScript);const[u]=await evalScript(l.source,k+";");m=JSON.stringify(u,null,4)}catch(b){m=b.message,n.classList.add("error")}let[c,p]=l.source.split(/\/\/\s*@run/);p||([p,c]=[c,p]),c??(c=""),n.innerHTML=[l.title.replace(/\s/g,"&nbsp;")+"&nbsp:",m.toString().slice(0,500)].join("&nbsp;&nbsp;"),s.tests.push({...l,code:p,pre:c,$benchmark:e,benchmark(b=1,k=1){const u=config("$chunk");let h=beforeScript;return u&&(h+=inputFillScript),h+=";"+c,benchmarkScript(b===1?p:`for (let $__i = 0; $__i < ${b}; $__i++) {${p}}`,h)}})})()}groups.push(s)}$container.querySelector(".cycles").value=config("CYCLES",scriptContainer.getAttribute("benchmark"),scriptContainer.dataset.count),$container.querySelector(".run-count").value=config("TIMES",5),$container.querySelector(".btn-copy").addEventListener("click",t=>{var n;let r=`
        \`\`\`
        \` ${(n=navigator.userAgent.match(/(Chrome|Firefox)\/\d+/))==null?void 0:n[0]}
        ---
        ${groups.map(m=>{const c=m.title==="_default",p=[];return c||p.push(m.title),m.$benchmarks.querySelectorAll(".log").forEach(b=>{p.push((c?"":"&nbsp;&nbsp;&nbsp;&nbsp;")+b.textContent)}),p.join(`
`)}).join(`
`)}
        ---
        https://github.com/silentmantra/benchmark \`
        \`\`\``.replace(/^\s+/mg,"").replaceAll("&nbsp;"," ");const s=Math.max(...r.split(`
`).map(m=>m.length));r=r.replaceAll("---","-".repeat(s));const l=document.querySelector("dialog"),e=l.querySelector("textarea");l.style.opacity=0,e.textContent=r,l.showModal(),e.focus(),e.select(),document.execCommand("copy"),l.close()});let running=!1;$container.querySelector(".stop-benchmark").addEventListener("click",()=>running=!1),$container.querySelector(".run-benchmark").addEventListener("click",async t=>{document.body.classList.add("benchmarking","running"),await Promise.timeout(),running=!0,await runBenchmark(),running=!1,document.body.classList.remove("running"),document.querySelector(".run-status").innerHTML=""});async function runBenchmark(){var s,l;groups.forEach(e=>{e.tests.forEach(n=>{n.$benchmark.querySelector(".log").textContent="",n.runs=Array.from(chunks,()=>({diminisher:1}))})}),await Promise.requestAnimationFrame();let t=$container.querySelector("input.cycles").valueAsNumber;const i=+$container.querySelector("input.run-count").valueAsNumber||5,r=e=>document.querySelector(".run-status").innerHTML=e+'&nbsp;<span class="blink">...</span>';if(t)groups.forEach(e=>e.count=t);else{r("estimating cycles");for(const e of groups)for(const[n,m]of chunks.entries()){let c=1,p=e.tests;const b=[];for(;;){for(const u of p)if(u.runs[n].duration=await u.benchmark(c,m),!running)return;const k=p.filter(u=>u.runs[n].duration<20);if(b.push(...p.filter(u=>u.runs[n].duration>=100)),b.forEach(u=>u.runs[n].diminisher*=10),!k.length){((s=e.runs??(e.runs=[]))[n]??(s[n]={})).count=c*10;break}p=p.filter(u=>u.runs[n].duration<100),c*=10}}}for(let e=0;e<i;e++)for(const[n,m]of chunks.entries()){for(const{tests:c,$benchmarks:p,runs:b}of groups)for(const[k,u]of[...c].entries()){const h=u.runs[n];r(chunks.length>1?`running ${u.title} with n=${m*$chunk.length}`:`running ${u.title}`),(l=u.$benchmark.querySelector(`.run-${n}`))==null||l.classList.add("blink"),await Promise.requestAnimationFrame();const w=await u.benchmark(b[n].count/h.diminisher|0,m);if(!running)return;(h.executions??(h.executions=[])).push(w),h.executions.sort((o,a)=>o-a),h.min=h.executions[0],c.sort((o,a)=>o.runs[n].min*o.runs[n].diminisher-a.runs[n].min*a.runs[n].diminisher).forEach(o=>p.appendChild(o.$benchmark));const x=(c[0].runs[n].min||0)*c[0].runs[n].diminisher;c.forEach((o,a)=>{o.runs[n].diff=a?(o.runs[n].min*o.runs[n].diminisher/x).toFixed(2)+"x":"1.00x"}),c.sort((o,a)=>(o=o.runs.findLast(d=>d.executions),a=a.runs.findLast(d=>d.executions),!o||!a?0:o.min*o.diminisher-a.min*a.diminisher)).forEach(o=>p.appendChild(o.$benchmark));const v=o=>{const a=o.toString().length,d=(a-1)/3|0,g=["","k","m","b"];return"x"+o.toString().slice(0,1+(a-1)%3)+g[d]};for(const o of c.filter(a=>a.runs[n].executions)){const a=(d,g)=>(d??"").toString().padStart(Math.max(...c.map(g).map(f=>(f==null?void 0:f.toString().length)||0))," ").replaceAll(" ","&nbsp;");chunks.length===1?o.$benchmark.querySelector(".log").innerHTML=['<span class="title">'+o.title.replace(/\s/g,"&nbsp;")+"&nbsp;</span>",'<b class="color-orange" title="Difference from fastest solution (with fastest results)">'+a(o.runs[n].diff,d=>d.runs[n].diff)+"</b>","|",'<span title="Number of cycles">'+a("x"+b[n].count/o.runs[n].diminisher,d=>"x"+b[n].count/d.runs[n].diminisher)+"</span>",...o.runs[n].executions.map((d,g)=>"<b>"+a(d,f=>{var y;return(y=f.runs[n].executions)==null?void 0:y[g]})+"</b>")].join("&nbsp;&nbsp;"):o.$benchmark.querySelector(".log").innerHTML=['<span class="title">'+o.title.replace(/\s/g,"&nbsp;")+"&nbsp;</span>",o.runs.filter(d=>d.executions).map((d,g)=>`<b class="color-orange run-${g}" title="Difference from fastest solution (with fastest results)">`+a(d.diff,f=>f.runs[g].diff)+'&nbsp;<span class="color-gray">'+a(v(b[g].count/d.diminisher),f=>v(b[g].count/f.runs[g].diminisher))+"</span></b>").join("&nbsp;|&nbsp;")].join("&nbsp;&nbsp;")}if(u!==c.at(-1)&&await Promise.timeout(1e3),!running)return}if(e<i.length-1&&await Promise.timeout(1e3),!running)return}}}async function benchmarkScript(t,i=""){const r=document.createElement("script"),s=Math.random().toString().slice(2).split("").reverse().join("");return r.src="data:text/javascript;base64,"+btoa(`
        try {
            ${i}
            const __$start$ = performance.now();
            ${t};
            window.__duration${s} = Math.round(performance.now() - __$start$);
        } catch (e) {
            window.__error${s} = e;
        }
    `),document.body.appendChild(r),new Promise((l,e)=>{r.onload=()=>{if(window["__error"+s]){const m=window["__error"+s];delete window["__error"+s],e(m)}const n=window["__duration"+s];delete window["__duration"+s],l(n)},r.onerror=e})}async function evalScript(t,i=""){const r=document.createElement("script"),s=Math.random().toString().slice(2).split("").reverse().join(""),l="`"+t.replaceAll("\\","\\\\").replaceAll("`","\\`")+"`";return r.src="data:text/javascript;base64,"+btoa(`
        try {
            ${i}
            window.__result${s} = eval(${l});
        } catch (e) {
            window.__error${s} = e;
        }
    `),document.body.appendChild(r),new Promise((e,n)=>{r.onload=()=>{if(window["__error"+s]){const c=window["__error"+s];delete window["__error"+s],n(c)}const m=window["__result"+s];delete window["__result"+s],e([m])},r.onerror=n})}function config(name,...vals){try{return eval(name)}catch(t){return vals.find(Boolean)}}})();
